// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Errors with bad config 1`] = `[Error: Error for 'application.mongoose' value{"isJoi":true,"name":"ValidationError","details":[{"message":"\\"value\\" must be an object","path":"value","type":"object.base","context":{"key":"value"}}],"_object":"bad"}]`;

exports[`Errors with host and database_name and unknown value 1`] = `[Error: Error for 'application.mongoose' value{"isJoi":true,"name":"ValidationError","details":[{"message":"\\"lol\\" is not allowed","path":"lol","type":"object.allowUnknown","context":{"child":"lol","key":"lol"}}],"_object":{"host":"localhost","database_name":"test","lol":"test"}}]`;

exports[`Errors with host without database_name 1`] = `[Error: Error for 'application.mongoose' value{"isJoi":true,"name":"ValidationError","details":[{"message":"\\"value\\" contains [host] without its required peers [database_name]","path":"value","type":"object.and","context":{"present":["host"],"presentWithLabels":["host"],"missing":["database_name"],"missingWithLabels":["database_name"],"key":"value"}}],"_object":{"host":"localhost"}}]`;

exports[`Errors without config folder 1`] = `[TypeError: Cannot read property 'host' of undefined]`;

exports[`with config host & database 1`] = `
MongooseConnection {
  "conn": NativeConnection {
    "_closeCalled": false,
    "_hasOpened": false,
    "_listening": false,
    "_readyState": 2,
    "base": Mongoose {
      "connections": Array [
        NativeConnection {
          "_closeCalled": false,
          "_hasOpened": false,
          "_listening": false,
          "_readyState": 0,
          "base": [Circular],
          "collections": Object {},
          "config": Object {
            "autoIndex": true,
          },
          "host": null,
          "hosts": null,
          "models": Object {},
          "name": null,
          "options": null,
          "otherDbs": Array [],
          "pass": null,
          "port": null,
          "replica": false,
          "user": null,
        },
        [Circular],
      ],
      "modelSchemas": Object {
        "Hero": Schema {
          "$globalPluginsApplied": true,
          "_indexes": Array [],
          "aliases": Object {},
          "callQueue": Array [
            Array [
              "pre",
              Array [
                "save",
                [Function],
              ],
            ],
            Array [
              "pre",
              Array [
                "save",
                [Function],
              ],
            ],
            Array [
              "pre",
              Arguments [
                "remove",
                true,
                [Function],
              ],
            ],
            Array [
              "on",
              Array [
                "init",
                [Function],
              ],
            ],
            Array [
              "pre",
              Arguments [
                "save",
                [Function],
              ],
            ],
            Array [
              "on",
              Array [
                "save",
                [Function],
              ],
            ],
          ],
          "childSchemas": Array [],
          "inherits": Object {},
          "methods": Object {},
          "nested": Object {},
          "obj": Object {
            "name": Object {
              "required": true,
              "type": [Function],
            },
          },
          "options": Object {
            "_id": true,
            "autoIndex": null,
            "bufferCommands": true,
            "capped": false,
            "discriminatorKey": "__t",
            "id": true,
            "minimize": true,
            "noId": false,
            "noVirtualId": false,
            "pluralization": true,
            "read": null,
            "retainKeyOrder": false,
            "shardKey": null,
            "strict": true,
            "typeKey": "type",
            "validateBeforeSave": true,
            "versionKey": "__v",
          },
          "paths": Object {
            "__v": SchemaNumber {
              "_index": null,
              "getters": Array [],
              "instance": "Number",
              "options": Object {
                "runSettersOnQuery": undefined,
                "type": [Function],
              },
              "path": "__v",
              "setters": Array [],
              "validators": Array [],
            },
            "_id": ObjectId {
              "_index": null,
              "defaultValue": [Function],
              "getters": Array [],
              "instance": "ObjectID",
              "options": Object {
                "auto": true,
                "runSettersOnQuery": undefined,
                "type": [Function],
              },
              "path": "_id",
              "setters": Array [
                [Function],
              ],
              "validators": Array [],
            },
            "name": SchemaString {
              "_index": null,
              "enumValues": Array [],
              "getters": Array [],
              "instance": "String",
              "isRequired": true,
              "options": Object {
                "required": true,
                "runSettersOnQuery": undefined,
                "type": [Function],
              },
              "originalRequiredValue": true,
              "path": "name",
              "regExp": null,
              "requiredValidator": [Function],
              "setters": Array [],
              "validators": Array [
                Object {
                  "message": "Path \`{PATH}\` is required.",
                  "type": "required",
                  "validator": [Function],
                },
              ],
            },
          },
          "plugins": Array [
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
          ],
          "query": Object {},
          "s": Object {
            "hooks": Kareem {
              "_posts": Object {},
              "_pres": Object {},
            },
            "kareemHooks": Object {
              "count": true,
              "find": true,
              "findOne": true,
              "findOneAndRemove": true,
              "findOneAndUpdate": true,
              "insertMany": true,
              "update": true,
              "updateMany": true,
              "updateOne": true,
            },
          },
          "singleNestedPaths": Object {},
          "statics": Object {},
          "subpaths": Object {},
          "tree": Object {
            "__v": [Function],
            "_id": Object {
              "auto": true,
              "type": [Function],
            },
            "id": VirtualType {
              "getters": Array [
                [Function],
              ],
              "options": Object {},
              "path": "id",
              "setters": Array [],
            },
            "name": Object {
              "required": true,
              "type": [Function],
            },
          },
          "virtuals": Object {
            "id": VirtualType {
              "getters": Array [
                [Function],
              ],
              "options": Object {},
              "path": "id",
              "setters": Array [],
            },
          },
        },
      },
      "models": Object {},
      "options": Object {
        "pluralization": true,
      },
      "plugins": Array [
        Array [
          [Function],
          Object {
            "deduplicate": true,
          },
        ],
        Array [
          [Function],
          Object {
            "deduplicate": true,
          },
        ],
        Array [
          [Function],
          Object {
            "deduplicate": true,
          },
        ],
      ],
    },
    "collections": Object {
      "heros": NativeCollection {
        "buffer": true,
        "collection": null,
        "collectionName": "heros",
        "conn": [Circular],
        "emitter": EventEmitter {
          "_events": Object {},
          "_eventsCount": 0,
          "_maxListeners": undefined,
          "domain": null,
        },
        "name": "heros",
        "opts": Object {
          "bufferCommands": true,
          "capped": false,
        },
        "queue": Array [],
      },
    },
    "config": Object {
      "autoIndex": true,
    },
    "db": Db {
      "_events": Object {},
      "_eventsCount": 0,
      "_maxListeners": undefined,
      "bufferMaxEntries": -1,
      "databaseName": "mongoosetest",
      "domain": null,
      "s": Object {
        "authSource": undefined,
        "bson": BSON {},
        "bufferMaxEntries": -1,
        "children": Array [],
        "databaseName": "mongoosetest",
        "dbCache": Object {},
        "logger": Logger {
          "className": "Db",
        },
        "nativeParser": undefined,
        "noListener": false,
        "options": Object {
          "forceServerObjectId": false,
          "promiseLibrary": [Function],
          "w": 1,
        },
        "parentDb": null,
        "pkFactory": undefined,
        "promiseLibrary": [Function],
        "readConcern": undefined,
        "readPreference": undefined,
        "topology": Server {
          "_events": Object {
            "all": [Function],
            "close": [Function],
            "error": [Function],
            "fullsetup": [Function],
            "open": [Function],
            "parseError": [Function],
            "reconnect": [Function],
            "timeout": [Function],
          },
          "_eventsCount": 8,
          "_maxListeners": undefined,
          "clientInfo": Object {
            "driver": Object {
              "name": "nodejs",
              "version": "2.2.31",
            },
            "os": Object {
              "architecture": "x64",
              "name": "darwin",
              "type": "Darwin",
              "version": "16.7.0",
            },
            "platform": "Node.js v8.2.1, LE",
          },
          "domain": null,
          "s": Object {
            "clonedOptions": Object {
              "auto_reconnect": true,
              "bson": BSON {},
              "clientInfo": Object {
                "driver": Object {
                  "name": "nodejs",
                  "version": "2.2.31",
                },
                "os": Object {
                  "architecture": "x64",
                  "name": "darwin",
                  "type": "Darwin",
                  "version": "16.7.0",
                },
                "platform": "Node.js v8.2.1, LE",
              },
              "cursorFactory": [Function],
              "disconnectHandler": Store {
                "length": 0,
                "s": Object {
                  "storeOptions": Object {
                    "bufferMaxEntries": -1,
                    "force": false,
                  },
                  "storedOps": Array [],
                  "topology": [Circular],
                },
              },
              "emitError": true,
              "forceServerObjectId": false,
              "host": "127.0.0.1",
              "port": 27017,
              "promiseLibrary": [Function],
              "reconnect": true,
              "size": 5,
              "socketOptions": Object {},
              "w": 1,
            },
            "emitError": true,
            "host": "127.0.0.1",
            "options": Object {
              "forceServerObjectId": false,
              "promiseLibrary": [Function],
              "w": 1,
            },
            "poolSize": 5,
            "port": 27017,
            "reconnect": true,
            "sCapabilities": null,
            "server": Server {
              "_events": Object {
                "attemptReconnect": [Function],
                "close": [Function],
                "connect": [Function],
                "error": [Function],
                "monitoring": [Function],
                "reconnect": [Function],
                "reconnectFailed": [Function],
                "serverClosed": [Function],
                "serverDescriptionChanged": [Function],
                "serverHeartbeatFailed": [Function],
                "serverHeartbeatStarted": [Function],
                "serverHeartbeatSucceeded": [Function],
                "serverOpening": [Function],
                "timeout": [Function],
                "topologyClosed": [Function],
                "topologyDescriptionChanged": [Function],
                "topologyOpening": [Function],
              },
              "_eventsCount": 17,
              "_maxListeners": undefined,
              "_type": "server",
              "clientInfo": Object {
                "driver": Object {
                  "name": "nodejs",
                  "version": "2.2.31",
                },
                "os": Object {
                  "architecture": "x64",
                  "name": "darwin",
                  "type": "Darwin",
                  "version": "16.7.0",
                },
                "platform": "Node.js v8.2.1, LE, mongodb-core: 2.1.15",
              },
              "domain": null,
              "id": 2,
              "initalConnect": true,
              "ismaster": null,
              "lastIsMasterMS": -1,
              "lastUpdateTime": 0,
              "lastWriteDate": 0,
              "monitoringProcessId": null,
              "s": Object {
                "Cursor": [Function],
                "bson": BSON {},
                "disconnectHandler": Store {
                  "length": 0,
                  "s": Object {
                    "storeOptions": Object {
                      "bufferMaxEntries": -1,
                      "force": false,
                    },
                    "storedOps": Array [],
                    "topology": [Circular],
                  },
                },
                "inTopology": false,
                "logger": Logger {
                  "className": "Server",
                },
                "monitoring": true,
                "monitoringInterval": 5000,
                "options": Object {
                  "auto_reconnect": true,
                  "bson": BSON {},
                  "clientInfo": Object {
                    "driver": Object {
                      "name": "nodejs",
                      "version": "2.2.31",
                    },
                    "os": Object {
                      "architecture": "x64",
                      "name": "darwin",
                      "type": "Darwin",
                      "version": "16.7.0",
                    },
                    "platform": "Node.js v8.2.1, LE",
                  },
                  "cursorFactory": [Function],
                  "disconnectHandler": Store {
                    "length": 0,
                    "s": Object {
                      "storeOptions": Object {
                        "bufferMaxEntries": -1,
                        "force": false,
                      },
                      "storedOps": Array [],
                      "topology": [Circular],
                    },
                  },
                  "emitError": true,
                  "forceServerObjectId": false,
                  "host": "127.0.0.1",
                  "port": 27017,
                  "promiseLibrary": [Function],
                  "reconnect": true,
                  "size": 5,
                  "socketOptions": Object {},
                  "w": 1,
                },
                "pool": Pool {
                  "_events": Object {
                    "close": [Function],
                    "connect": [Function],
                    "error": [Function],
                    "parseError": [Function],
                    "reconnect": [Function],
                    "reconnectFailed": [Function],
                    "timeout": [Function],
                  },
                  "_eventsCount": 7,
                  "_maxListeners": undefined,
                  "authProviders": Object {
                    "gssapi": GSSAPI {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "mongocr": MongoCR {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "plain": Plain {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "scram-sha-1": ScramSHA1 {
                      "authStore": Array [],
                      "bson": BSON {},
                      "id": 2,
                    },
                    "sspi": SSPI {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "x509": X509 {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                  },
                  "authenticating": false,
                  "authenticatingTimestamp": null,
                  "availableConnections": Array [],
                  "connectingConnections": Array [
                    Object {
                      "host": "127.0.0.1",
                      "id": 2,
                      "port": 27017,
                    },
                  ],
                  "connectionIndex": 0,
                  "domain": null,
                  "executing": false,
                  "id": 2,
                  "inUseConnections": Array [],
                  "logger": Logger {
                    "className": "Pool",
                  },
                  "loggingout": false,
                  "nonAuthenticatedConnections": Array [],
                  "numberOfConsecutiveTimeouts": 0,
                  "options": Object {
                    "auto_reconnect": true,
                    "bson": BSON {},
                    "ca": null,
                    "cert": null,
                    "checkServerIdentity": true,
                    "clientInfo": Object {
                      "driver": Object {
                        "name": "nodejs",
                        "version": "2.2.31",
                      },
                      "os": Object {
                        "architecture": "x64",
                        "name": "darwin",
                        "type": "Darwin",
                        "version": "16.7.0",
                      },
                      "platform": "Node.js v8.2.1, LE",
                    },
                    "connectionTimeout": 30000,
                    "crl": null,
                    "cursorFactory": [Function],
                    "disconnectHandler": Store {
                      "length": 0,
                      "s": Object {
                        "storeOptions": Object {
                          "bufferMaxEntries": -1,
                          "force": false,
                        },
                        "storedOps": Array [],
                        "topology": [Circular],
                      },
                    },
                    "domainsEnabled": false,
                    "emitError": true,
                    "forceServerObjectId": false,
                    "host": "127.0.0.1",
                    "keepAlive": true,
                    "keepAliveInitialDelay": 300000,
                    "key": null,
                    "noDelay": true,
                    "passPhrase": null,
                    "port": 27017,
                    "promiseLibrary": [Function],
                    "promoteBuffers": false,
                    "promoteLongs": true,
                    "promoteValues": true,
                    "reconnect": true,
                    "reconnectInterval": 1000,
                    "reconnectTries": 30,
                    "rejectUnauthorized": false,
                    "size": 5,
                    "socketOptions": Object {},
                    "socketTimeout": 360000,
                    "ssl": false,
                    "w": 1,
                  },
                  "queue": Array [],
                  "reconnectConnection": null,
                  "reconnectId": null,
                  "retriesLeft": 30,
                  "state": "connecting",
                },
                "topologyId": -1,
              },
              "staleness": 0,
              "wireProtocolHandler": WireProtocol {},
            },
            "store": Store {
              "length": 0,
              "s": Object {
                "storeOptions": Object {
                  "bufferMaxEntries": -1,
                  "force": false,
                },
                "storedOps": Array [],
                "topology": [Circular],
              },
            },
            "storeOptions": Object {
              "bufferMaxEntries": -1,
              "force": false,
            },
          },
        },
      },
      "serverConfig": Server {
        "_events": Object {
          "all": [Function],
          "close": [Function],
          "error": [Function],
          "fullsetup": [Function],
          "open": [Function],
          "parseError": [Function],
          "reconnect": [Function],
          "timeout": [Function],
        },
        "_eventsCount": 8,
        "_maxListeners": undefined,
        "clientInfo": Object {
          "driver": Object {
            "name": "nodejs",
            "version": "2.2.31",
          },
          "os": Object {
            "architecture": "x64",
            "name": "darwin",
            "type": "Darwin",
            "version": "16.7.0",
          },
          "platform": "Node.js v8.2.1, LE",
        },
        "domain": null,
        "s": Object {
          "clonedOptions": Object {
            "auto_reconnect": true,
            "bson": BSON {},
            "clientInfo": Object {
              "driver": Object {
                "name": "nodejs",
                "version": "2.2.31",
              },
              "os": Object {
                "architecture": "x64",
                "name": "darwin",
                "type": "Darwin",
                "version": "16.7.0",
              },
              "platform": "Node.js v8.2.1, LE",
            },
            "cursorFactory": [Function],
            "disconnectHandler": Store {
              "length": 0,
              "s": Object {
                "storeOptions": Object {
                  "bufferMaxEntries": -1,
                  "force": false,
                },
                "storedOps": Array [],
                "topology": [Circular],
              },
            },
            "emitError": true,
            "forceServerObjectId": false,
            "host": "127.0.0.1",
            "port": 27017,
            "promiseLibrary": [Function],
            "reconnect": true,
            "size": 5,
            "socketOptions": Object {},
            "w": 1,
          },
          "emitError": true,
          "host": "127.0.0.1",
          "options": Object {
            "forceServerObjectId": false,
            "promiseLibrary": [Function],
            "w": 1,
          },
          "poolSize": 5,
          "port": 27017,
          "reconnect": true,
          "sCapabilities": null,
          "server": Server {
            "_events": Object {
              "attemptReconnect": [Function],
              "close": [Function],
              "connect": [Function],
              "error": [Function],
              "monitoring": [Function],
              "reconnect": [Function],
              "reconnectFailed": [Function],
              "serverClosed": [Function],
              "serverDescriptionChanged": [Function],
              "serverHeartbeatFailed": [Function],
              "serverHeartbeatStarted": [Function],
              "serverHeartbeatSucceeded": [Function],
              "serverOpening": [Function],
              "timeout": [Function],
              "topologyClosed": [Function],
              "topologyDescriptionChanged": [Function],
              "topologyOpening": [Function],
            },
            "_eventsCount": 17,
            "_maxListeners": undefined,
            "_type": "server",
            "clientInfo": Object {
              "driver": Object {
                "name": "nodejs",
                "version": "2.2.31",
              },
              "os": Object {
                "architecture": "x64",
                "name": "darwin",
                "type": "Darwin",
                "version": "16.7.0",
              },
              "platform": "Node.js v8.2.1, LE, mongodb-core: 2.1.15",
            },
            "domain": null,
            "id": 2,
            "initalConnect": true,
            "ismaster": null,
            "lastIsMasterMS": -1,
            "lastUpdateTime": 0,
            "lastWriteDate": 0,
            "monitoringProcessId": null,
            "s": Object {
              "Cursor": [Function],
              "bson": BSON {},
              "disconnectHandler": Store {
                "length": 0,
                "s": Object {
                  "storeOptions": Object {
                    "bufferMaxEntries": -1,
                    "force": false,
                  },
                  "storedOps": Array [],
                  "topology": [Circular],
                },
              },
              "inTopology": false,
              "logger": Logger {
                "className": "Server",
              },
              "monitoring": true,
              "monitoringInterval": 5000,
              "options": Object {
                "auto_reconnect": true,
                "bson": BSON {},
                "clientInfo": Object {
                  "driver": Object {
                    "name": "nodejs",
                    "version": "2.2.31",
                  },
                  "os": Object {
                    "architecture": "x64",
                    "name": "darwin",
                    "type": "Darwin",
                    "version": "16.7.0",
                  },
                  "platform": "Node.js v8.2.1, LE",
                },
                "cursorFactory": [Function],
                "disconnectHandler": Store {
                  "length": 0,
                  "s": Object {
                    "storeOptions": Object {
                      "bufferMaxEntries": -1,
                      "force": false,
                    },
                    "storedOps": Array [],
                    "topology": [Circular],
                  },
                },
                "emitError": true,
                "forceServerObjectId": false,
                "host": "127.0.0.1",
                "port": 27017,
                "promiseLibrary": [Function],
                "reconnect": true,
                "size": 5,
                "socketOptions": Object {},
                "w": 1,
              },
              "pool": Pool {
                "_events": Object {
                  "close": [Function],
                  "connect": [Function],
                  "error": [Function],
                  "parseError": [Function],
                  "reconnect": [Function],
                  "reconnectFailed": [Function],
                  "timeout": [Function],
                },
                "_eventsCount": 7,
                "_maxListeners": undefined,
                "authProviders": Object {
                  "gssapi": GSSAPI {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "mongocr": MongoCR {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "plain": Plain {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "scram-sha-1": ScramSHA1 {
                    "authStore": Array [],
                    "bson": BSON {},
                    "id": 2,
                  },
                  "sspi": SSPI {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "x509": X509 {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                },
                "authenticating": false,
                "authenticatingTimestamp": null,
                "availableConnections": Array [],
                "connectingConnections": Array [
                  Object {
                    "host": "127.0.0.1",
                    "id": 2,
                    "port": 27017,
                  },
                ],
                "connectionIndex": 0,
                "domain": null,
                "executing": false,
                "id": 2,
                "inUseConnections": Array [],
                "logger": Logger {
                  "className": "Pool",
                },
                "loggingout": false,
                "nonAuthenticatedConnections": Array [],
                "numberOfConsecutiveTimeouts": 0,
                "options": Object {
                  "auto_reconnect": true,
                  "bson": BSON {},
                  "ca": null,
                  "cert": null,
                  "checkServerIdentity": true,
                  "clientInfo": Object {
                    "driver": Object {
                      "name": "nodejs",
                      "version": "2.2.31",
                    },
                    "os": Object {
                      "architecture": "x64",
                      "name": "darwin",
                      "type": "Darwin",
                      "version": "16.7.0",
                    },
                    "platform": "Node.js v8.2.1, LE",
                  },
                  "connectionTimeout": 30000,
                  "crl": null,
                  "cursorFactory": [Function],
                  "disconnectHandler": Store {
                    "length": 0,
                    "s": Object {
                      "storeOptions": Object {
                        "bufferMaxEntries": -1,
                        "force": false,
                      },
                      "storedOps": Array [],
                      "topology": [Circular],
                    },
                  },
                  "domainsEnabled": false,
                  "emitError": true,
                  "forceServerObjectId": false,
                  "host": "127.0.0.1",
                  "keepAlive": true,
                  "keepAliveInitialDelay": 300000,
                  "key": null,
                  "noDelay": true,
                  "passPhrase": null,
                  "port": 27017,
                  "promiseLibrary": [Function],
                  "promoteBuffers": false,
                  "promoteLongs": true,
                  "promoteValues": true,
                  "reconnect": true,
                  "reconnectInterval": 1000,
                  "reconnectTries": 30,
                  "rejectUnauthorized": false,
                  "size": 5,
                  "socketOptions": Object {},
                  "socketTimeout": 360000,
                  "ssl": false,
                  "w": 1,
                },
                "queue": Array [],
                "reconnectConnection": null,
                "reconnectId": null,
                "retriesLeft": 30,
                "state": "connecting",
              },
              "topologyId": -1,
            },
            "staleness": 0,
            "wireProtocolHandler": WireProtocol {},
          },
          "store": Store {
            "length": 0,
            "s": Object {
              "storeOptions": Object {
                "bufferMaxEntries": -1,
                "force": false,
              },
              "storedOps": Array [],
              "topology": [Circular],
            },
          },
          "storeOptions": Object {
            "bufferMaxEntries": -1,
            "force": false,
          },
        },
      },
    },
    "host": "127.0.0.1",
    "hosts": null,
    "models": Object {
      "Hero": [Function],
    },
    "name": "mongoosetest",
    "options": Object {
      "auth": Object {},
      "db": Object {
        "forceServerObjectId": false,
        "w": 1,
      },
      "mongos": undefined,
      "replset": Object {
        "socketOptions": Object {},
      },
      "server": Object {
        "auto_reconnect": true,
        "socketOptions": Object {},
      },
    },
    "otherDbs": Array [],
    "pass": undefined,
    "port": 27017,
    "replica": false,
    "user": undefined,
  },
  "repositories": Map {},
  "schemas": Map {
    "hero" => [Function],
  },
}
`;

exports[`with config host & database 2`] = `Array []`;

exports[`with config host & database 3`] = `"test"`;

exports[`with config uri 1`] = `
MongooseConnection {
  "conn": NativeConnection {
    "_closeCalled": false,
    "_hasOpened": false,
    "_listening": false,
    "_readyState": 2,
    "base": Mongoose {
      "connections": Array [
        NativeConnection {
          "_closeCalled": false,
          "_hasOpened": false,
          "_listening": false,
          "_readyState": 0,
          "base": [Circular],
          "collections": Object {},
          "config": Object {
            "autoIndex": true,
          },
          "host": null,
          "hosts": null,
          "models": Object {},
          "name": null,
          "options": null,
          "otherDbs": Array [],
          "pass": null,
          "port": null,
          "replica": false,
          "user": null,
        },
        [Circular],
      ],
      "modelSchemas": Object {
        "Hero": Schema {
          "$globalPluginsApplied": true,
          "_indexes": Array [],
          "aliases": Object {},
          "callQueue": Array [
            Array [
              "pre",
              Array [
                "save",
                [Function],
              ],
            ],
            Array [
              "pre",
              Array [
                "save",
                [Function],
              ],
            ],
            Array [
              "pre",
              Arguments [
                "remove",
                true,
                [Function],
              ],
            ],
            Array [
              "on",
              Array [
                "init",
                [Function],
              ],
            ],
            Array [
              "pre",
              Arguments [
                "save",
                [Function],
              ],
            ],
            Array [
              "on",
              Array [
                "save",
                [Function],
              ],
            ],
          ],
          "childSchemas": Array [],
          "inherits": Object {},
          "methods": Object {},
          "nested": Object {},
          "obj": Object {
            "name": Object {
              "required": true,
              "type": [Function],
            },
          },
          "options": Object {
            "_id": true,
            "autoIndex": null,
            "bufferCommands": true,
            "capped": false,
            "discriminatorKey": "__t",
            "id": true,
            "minimize": true,
            "noId": false,
            "noVirtualId": false,
            "pluralization": true,
            "read": null,
            "retainKeyOrder": false,
            "shardKey": null,
            "strict": true,
            "typeKey": "type",
            "validateBeforeSave": true,
            "versionKey": "__v",
          },
          "paths": Object {
            "__v": SchemaNumber {
              "_index": null,
              "getters": Array [],
              "instance": "Number",
              "options": Object {
                "runSettersOnQuery": undefined,
                "type": [Function],
              },
              "path": "__v",
              "setters": Array [],
              "validators": Array [],
            },
            "_id": ObjectId {
              "_index": null,
              "defaultValue": [Function],
              "getters": Array [],
              "instance": "ObjectID",
              "options": Object {
                "auto": true,
                "runSettersOnQuery": undefined,
                "type": [Function],
              },
              "path": "_id",
              "setters": Array [
                [Function],
              ],
              "validators": Array [],
            },
            "name": SchemaString {
              "_index": null,
              "enumValues": Array [],
              "getters": Array [],
              "instance": "String",
              "isRequired": true,
              "options": Object {
                "required": true,
                "runSettersOnQuery": undefined,
                "type": [Function],
              },
              "originalRequiredValue": true,
              "path": "name",
              "regExp": null,
              "requiredValidator": [Function],
              "setters": Array [],
              "validators": Array [
                Object {
                  "message": "Path \`{PATH}\` is required.",
                  "type": "required",
                  "validator": [Function],
                },
              ],
            },
          },
          "plugins": Array [
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
            Object {
              "fn": [Function],
              "opts": Object {
                "deduplicate": true,
              },
            },
          ],
          "query": Object {},
          "s": Object {
            "hooks": Kareem {
              "_posts": Object {},
              "_pres": Object {},
            },
            "kareemHooks": Object {
              "count": true,
              "find": true,
              "findOne": true,
              "findOneAndRemove": true,
              "findOneAndUpdate": true,
              "insertMany": true,
              "update": true,
              "updateMany": true,
              "updateOne": true,
            },
          },
          "singleNestedPaths": Object {},
          "statics": Object {},
          "subpaths": Object {},
          "tree": Object {
            "__v": [Function],
            "_id": Object {
              "auto": true,
              "type": [Function],
            },
            "id": VirtualType {
              "getters": Array [
                [Function],
              ],
              "options": Object {},
              "path": "id",
              "setters": Array [],
            },
            "name": Object {
              "required": true,
              "type": [Function],
            },
          },
          "virtuals": Object {
            "id": VirtualType {
              "getters": Array [
                [Function],
              ],
              "options": Object {},
              "path": "id",
              "setters": Array [],
            },
          },
        },
      },
      "models": Object {},
      "options": Object {
        "pluralization": true,
      },
      "plugins": Array [
        Array [
          [Function],
          Object {
            "deduplicate": true,
          },
        ],
        Array [
          [Function],
          Object {
            "deduplicate": true,
          },
        ],
        Array [
          [Function],
          Object {
            "deduplicate": true,
          },
        ],
      ],
    },
    "collections": Object {
      "heros": NativeCollection {
        "buffer": true,
        "collection": null,
        "collectionName": "heros",
        "conn": [Circular],
        "emitter": EventEmitter {
          "_events": Object {},
          "_eventsCount": 0,
          "_maxListeners": undefined,
          "domain": null,
        },
        "name": "heros",
        "opts": Object {
          "bufferCommands": true,
          "capped": false,
        },
        "queue": Array [],
      },
    },
    "config": Object {
      "autoIndex": true,
    },
    "db": Db {
      "_events": Object {},
      "_eventsCount": 0,
      "_maxListeners": undefined,
      "bufferMaxEntries": -1,
      "databaseName": "mongoosetest",
      "domain": null,
      "s": Object {
        "authSource": undefined,
        "bson": BSON {},
        "bufferMaxEntries": -1,
        "children": Array [],
        "databaseName": "mongoosetest",
        "dbCache": Object {},
        "logger": Logger {
          "className": "Db",
        },
        "nativeParser": undefined,
        "noListener": false,
        "options": Object {
          "forceServerObjectId": false,
          "promiseLibrary": [Function],
          "w": 1,
        },
        "parentDb": null,
        "pkFactory": undefined,
        "promiseLibrary": [Function],
        "readConcern": undefined,
        "readPreference": undefined,
        "topology": Server {
          "_events": Object {
            "all": [Function],
            "close": [Function],
            "error": [Function],
            "fullsetup": [Function],
            "open": [Function],
            "parseError": [Function],
            "reconnect": [Function],
            "timeout": [Function],
          },
          "_eventsCount": 8,
          "_maxListeners": undefined,
          "clientInfo": Object {
            "driver": Object {
              "name": "nodejs",
              "version": "2.2.31",
            },
            "os": Object {
              "architecture": "x64",
              "name": "darwin",
              "type": "Darwin",
              "version": "16.7.0",
            },
            "platform": "Node.js v8.2.1, LE",
          },
          "domain": null,
          "s": Object {
            "clonedOptions": Object {
              "auto_reconnect": true,
              "bson": BSON {},
              "clientInfo": Object {
                "driver": Object {
                  "name": "nodejs",
                  "version": "2.2.31",
                },
                "os": Object {
                  "architecture": "x64",
                  "name": "darwin",
                  "type": "Darwin",
                  "version": "16.7.0",
                },
                "platform": "Node.js v8.2.1, LE",
              },
              "cursorFactory": [Function],
              "disconnectHandler": Store {
                "length": 0,
                "s": Object {
                  "storeOptions": Object {
                    "bufferMaxEntries": -1,
                    "force": false,
                  },
                  "storedOps": Array [],
                  "topology": [Circular],
                },
              },
              "emitError": true,
              "forceServerObjectId": false,
              "host": "127.0.0.1",
              "port": 27017,
              "promiseLibrary": [Function],
              "reconnect": true,
              "size": 5,
              "socketOptions": Object {},
              "w": 1,
            },
            "emitError": true,
            "host": "127.0.0.1",
            "options": Object {
              "forceServerObjectId": false,
              "promiseLibrary": [Function],
              "w": 1,
            },
            "poolSize": 5,
            "port": 27017,
            "reconnect": true,
            "sCapabilities": null,
            "server": Server {
              "_events": Object {
                "attemptReconnect": [Function],
                "close": [Function],
                "connect": [Function],
                "error": [Function],
                "monitoring": [Function],
                "reconnect": [Function],
                "reconnectFailed": [Function],
                "serverClosed": [Function],
                "serverDescriptionChanged": [Function],
                "serverHeartbeatFailed": [Function],
                "serverHeartbeatStarted": [Function],
                "serverHeartbeatSucceeded": [Function],
                "serverOpening": [Function],
                "timeout": [Function],
                "topologyClosed": [Function],
                "topologyDescriptionChanged": [Function],
                "topologyOpening": [Function],
              },
              "_eventsCount": 17,
              "_maxListeners": undefined,
              "_type": "server",
              "clientInfo": Object {
                "driver": Object {
                  "name": "nodejs",
                  "version": "2.2.31",
                },
                "os": Object {
                  "architecture": "x64",
                  "name": "darwin",
                  "type": "Darwin",
                  "version": "16.7.0",
                },
                "platform": "Node.js v8.2.1, LE, mongodb-core: 2.1.15",
              },
              "domain": null,
              "id": 1,
              "initalConnect": true,
              "ismaster": null,
              "lastIsMasterMS": -1,
              "lastUpdateTime": 0,
              "lastWriteDate": 0,
              "monitoringProcessId": null,
              "s": Object {
                "Cursor": [Function],
                "bson": BSON {},
                "disconnectHandler": Store {
                  "length": 0,
                  "s": Object {
                    "storeOptions": Object {
                      "bufferMaxEntries": -1,
                      "force": false,
                    },
                    "storedOps": Array [],
                    "topology": [Circular],
                  },
                },
                "inTopology": false,
                "logger": Logger {
                  "className": "Server",
                },
                "monitoring": true,
                "monitoringInterval": 5000,
                "options": Object {
                  "auto_reconnect": true,
                  "bson": BSON {},
                  "clientInfo": Object {
                    "driver": Object {
                      "name": "nodejs",
                      "version": "2.2.31",
                    },
                    "os": Object {
                      "architecture": "x64",
                      "name": "darwin",
                      "type": "Darwin",
                      "version": "16.7.0",
                    },
                    "platform": "Node.js v8.2.1, LE",
                  },
                  "cursorFactory": [Function],
                  "disconnectHandler": Store {
                    "length": 0,
                    "s": Object {
                      "storeOptions": Object {
                        "bufferMaxEntries": -1,
                        "force": false,
                      },
                      "storedOps": Array [],
                      "topology": [Circular],
                    },
                  },
                  "emitError": true,
                  "forceServerObjectId": false,
                  "host": "127.0.0.1",
                  "port": 27017,
                  "promiseLibrary": [Function],
                  "reconnect": true,
                  "size": 5,
                  "socketOptions": Object {},
                  "w": 1,
                },
                "pool": Pool {
                  "_events": Object {
                    "close": [Function],
                    "connect": [Function],
                    "error": [Function],
                    "parseError": [Function],
                    "reconnect": [Function],
                    "reconnectFailed": [Function],
                    "timeout": [Function],
                  },
                  "_eventsCount": 7,
                  "_maxListeners": undefined,
                  "authProviders": Object {
                    "gssapi": GSSAPI {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "mongocr": MongoCR {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "plain": Plain {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "scram-sha-1": ScramSHA1 {
                      "authStore": Array [],
                      "bson": BSON {},
                      "id": 1,
                    },
                    "sspi": SSPI {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                    "x509": X509 {
                      "authStore": Array [],
                      "bson": BSON {},
                    },
                  },
                  "authenticating": false,
                  "authenticatingTimestamp": null,
                  "availableConnections": Array [],
                  "connectingConnections": Array [
                    Object {
                      "host": "127.0.0.1",
                      "id": 1,
                      "port": 27017,
                    },
                  ],
                  "connectionIndex": 0,
                  "domain": null,
                  "executing": false,
                  "id": 1,
                  "inUseConnections": Array [],
                  "logger": Logger {
                    "className": "Pool",
                  },
                  "loggingout": false,
                  "nonAuthenticatedConnections": Array [],
                  "numberOfConsecutiveTimeouts": 0,
                  "options": Object {
                    "auto_reconnect": true,
                    "bson": BSON {},
                    "ca": null,
                    "cert": null,
                    "checkServerIdentity": true,
                    "clientInfo": Object {
                      "driver": Object {
                        "name": "nodejs",
                        "version": "2.2.31",
                      },
                      "os": Object {
                        "architecture": "x64",
                        "name": "darwin",
                        "type": "Darwin",
                        "version": "16.7.0",
                      },
                      "platform": "Node.js v8.2.1, LE",
                    },
                    "connectionTimeout": 30000,
                    "crl": null,
                    "cursorFactory": [Function],
                    "disconnectHandler": Store {
                      "length": 0,
                      "s": Object {
                        "storeOptions": Object {
                          "bufferMaxEntries": -1,
                          "force": false,
                        },
                        "storedOps": Array [],
                        "topology": [Circular],
                      },
                    },
                    "domainsEnabled": false,
                    "emitError": true,
                    "forceServerObjectId": false,
                    "host": "127.0.0.1",
                    "keepAlive": true,
                    "keepAliveInitialDelay": 300000,
                    "key": null,
                    "noDelay": true,
                    "passPhrase": null,
                    "port": 27017,
                    "promiseLibrary": [Function],
                    "promoteBuffers": false,
                    "promoteLongs": true,
                    "promoteValues": true,
                    "reconnect": true,
                    "reconnectInterval": 1000,
                    "reconnectTries": 30,
                    "rejectUnauthorized": false,
                    "size": 5,
                    "socketOptions": Object {},
                    "socketTimeout": 360000,
                    "ssl": false,
                    "w": 1,
                  },
                  "queue": Array [],
                  "reconnectConnection": null,
                  "reconnectId": null,
                  "retriesLeft": 30,
                  "state": "connecting",
                },
                "topologyId": -1,
              },
              "staleness": 0,
              "wireProtocolHandler": WireProtocol {},
            },
            "store": Store {
              "length": 0,
              "s": Object {
                "storeOptions": Object {
                  "bufferMaxEntries": -1,
                  "force": false,
                },
                "storedOps": Array [],
                "topology": [Circular],
              },
            },
            "storeOptions": Object {
              "bufferMaxEntries": -1,
              "force": false,
            },
          },
        },
      },
      "serverConfig": Server {
        "_events": Object {
          "all": [Function],
          "close": [Function],
          "error": [Function],
          "fullsetup": [Function],
          "open": [Function],
          "parseError": [Function],
          "reconnect": [Function],
          "timeout": [Function],
        },
        "_eventsCount": 8,
        "_maxListeners": undefined,
        "clientInfo": Object {
          "driver": Object {
            "name": "nodejs",
            "version": "2.2.31",
          },
          "os": Object {
            "architecture": "x64",
            "name": "darwin",
            "type": "Darwin",
            "version": "16.7.0",
          },
          "platform": "Node.js v8.2.1, LE",
        },
        "domain": null,
        "s": Object {
          "clonedOptions": Object {
            "auto_reconnect": true,
            "bson": BSON {},
            "clientInfo": Object {
              "driver": Object {
                "name": "nodejs",
                "version": "2.2.31",
              },
              "os": Object {
                "architecture": "x64",
                "name": "darwin",
                "type": "Darwin",
                "version": "16.7.0",
              },
              "platform": "Node.js v8.2.1, LE",
            },
            "cursorFactory": [Function],
            "disconnectHandler": Store {
              "length": 0,
              "s": Object {
                "storeOptions": Object {
                  "bufferMaxEntries": -1,
                  "force": false,
                },
                "storedOps": Array [],
                "topology": [Circular],
              },
            },
            "emitError": true,
            "forceServerObjectId": false,
            "host": "127.0.0.1",
            "port": 27017,
            "promiseLibrary": [Function],
            "reconnect": true,
            "size": 5,
            "socketOptions": Object {},
            "w": 1,
          },
          "emitError": true,
          "host": "127.0.0.1",
          "options": Object {
            "forceServerObjectId": false,
            "promiseLibrary": [Function],
            "w": 1,
          },
          "poolSize": 5,
          "port": 27017,
          "reconnect": true,
          "sCapabilities": null,
          "server": Server {
            "_events": Object {
              "attemptReconnect": [Function],
              "close": [Function],
              "connect": [Function],
              "error": [Function],
              "monitoring": [Function],
              "reconnect": [Function],
              "reconnectFailed": [Function],
              "serverClosed": [Function],
              "serverDescriptionChanged": [Function],
              "serverHeartbeatFailed": [Function],
              "serverHeartbeatStarted": [Function],
              "serverHeartbeatSucceeded": [Function],
              "serverOpening": [Function],
              "timeout": [Function],
              "topologyClosed": [Function],
              "topologyDescriptionChanged": [Function],
              "topologyOpening": [Function],
            },
            "_eventsCount": 17,
            "_maxListeners": undefined,
            "_type": "server",
            "clientInfo": Object {
              "driver": Object {
                "name": "nodejs",
                "version": "2.2.31",
              },
              "os": Object {
                "architecture": "x64",
                "name": "darwin",
                "type": "Darwin",
                "version": "16.7.0",
              },
              "platform": "Node.js v8.2.1, LE, mongodb-core: 2.1.15",
            },
            "domain": null,
            "id": 1,
            "initalConnect": true,
            "ismaster": null,
            "lastIsMasterMS": -1,
            "lastUpdateTime": 0,
            "lastWriteDate": 0,
            "monitoringProcessId": null,
            "s": Object {
              "Cursor": [Function],
              "bson": BSON {},
              "disconnectHandler": Store {
                "length": 0,
                "s": Object {
                  "storeOptions": Object {
                    "bufferMaxEntries": -1,
                    "force": false,
                  },
                  "storedOps": Array [],
                  "topology": [Circular],
                },
              },
              "inTopology": false,
              "logger": Logger {
                "className": "Server",
              },
              "monitoring": true,
              "monitoringInterval": 5000,
              "options": Object {
                "auto_reconnect": true,
                "bson": BSON {},
                "clientInfo": Object {
                  "driver": Object {
                    "name": "nodejs",
                    "version": "2.2.31",
                  },
                  "os": Object {
                    "architecture": "x64",
                    "name": "darwin",
                    "type": "Darwin",
                    "version": "16.7.0",
                  },
                  "platform": "Node.js v8.2.1, LE",
                },
                "cursorFactory": [Function],
                "disconnectHandler": Store {
                  "length": 0,
                  "s": Object {
                    "storeOptions": Object {
                      "bufferMaxEntries": -1,
                      "force": false,
                    },
                    "storedOps": Array [],
                    "topology": [Circular],
                  },
                },
                "emitError": true,
                "forceServerObjectId": false,
                "host": "127.0.0.1",
                "port": 27017,
                "promiseLibrary": [Function],
                "reconnect": true,
                "size": 5,
                "socketOptions": Object {},
                "w": 1,
              },
              "pool": Pool {
                "_events": Object {
                  "close": [Function],
                  "connect": [Function],
                  "error": [Function],
                  "parseError": [Function],
                  "reconnect": [Function],
                  "reconnectFailed": [Function],
                  "timeout": [Function],
                },
                "_eventsCount": 7,
                "_maxListeners": undefined,
                "authProviders": Object {
                  "gssapi": GSSAPI {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "mongocr": MongoCR {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "plain": Plain {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "scram-sha-1": ScramSHA1 {
                    "authStore": Array [],
                    "bson": BSON {},
                    "id": 1,
                  },
                  "sspi": SSPI {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                  "x509": X509 {
                    "authStore": Array [],
                    "bson": BSON {},
                  },
                },
                "authenticating": false,
                "authenticatingTimestamp": null,
                "availableConnections": Array [],
                "connectingConnections": Array [
                  Object {
                    "host": "127.0.0.1",
                    "id": 1,
                    "port": 27017,
                  },
                ],
                "connectionIndex": 0,
                "domain": null,
                "executing": false,
                "id": 1,
                "inUseConnections": Array [],
                "logger": Logger {
                  "className": "Pool",
                },
                "loggingout": false,
                "nonAuthenticatedConnections": Array [],
                "numberOfConsecutiveTimeouts": 0,
                "options": Object {
                  "auto_reconnect": true,
                  "bson": BSON {},
                  "ca": null,
                  "cert": null,
                  "checkServerIdentity": true,
                  "clientInfo": Object {
                    "driver": Object {
                      "name": "nodejs",
                      "version": "2.2.31",
                    },
                    "os": Object {
                      "architecture": "x64",
                      "name": "darwin",
                      "type": "Darwin",
                      "version": "16.7.0",
                    },
                    "platform": "Node.js v8.2.1, LE",
                  },
                  "connectionTimeout": 30000,
                  "crl": null,
                  "cursorFactory": [Function],
                  "disconnectHandler": Store {
                    "length": 0,
                    "s": Object {
                      "storeOptions": Object {
                        "bufferMaxEntries": -1,
                        "force": false,
                      },
                      "storedOps": Array [],
                      "topology": [Circular],
                    },
                  },
                  "domainsEnabled": false,
                  "emitError": true,
                  "forceServerObjectId": false,
                  "host": "127.0.0.1",
                  "keepAlive": true,
                  "keepAliveInitialDelay": 300000,
                  "key": null,
                  "noDelay": true,
                  "passPhrase": null,
                  "port": 27017,
                  "promiseLibrary": [Function],
                  "promoteBuffers": false,
                  "promoteLongs": true,
                  "promoteValues": true,
                  "reconnect": true,
                  "reconnectInterval": 1000,
                  "reconnectTries": 30,
                  "rejectUnauthorized": false,
                  "size": 5,
                  "socketOptions": Object {},
                  "socketTimeout": 360000,
                  "ssl": false,
                  "w": 1,
                },
                "queue": Array [],
                "reconnectConnection": null,
                "reconnectId": null,
                "retriesLeft": 30,
                "state": "connecting",
              },
              "topologyId": -1,
            },
            "staleness": 0,
            "wireProtocolHandler": WireProtocol {},
          },
          "store": Store {
            "length": 0,
            "s": Object {
              "storeOptions": Object {
                "bufferMaxEntries": -1,
                "force": false,
              },
              "storedOps": Array [],
              "topology": [Circular],
            },
          },
          "storeOptions": Object {
            "bufferMaxEntries": -1,
            "force": false,
          },
        },
      },
    },
    "host": "127.0.0.1",
    "hosts": null,
    "models": Object {
      "Hero": [Function],
    },
    "name": "mongoosetest",
    "options": Object {
      "auth": Object {},
      "db": Object {
        "forceServerObjectId": false,
        "w": 1,
      },
      "mongos": undefined,
      "replset": Object {
        "socketOptions": Object {},
      },
      "server": Object {
        "auto_reconnect": true,
        "socketOptions": Object {},
      },
    },
    "otherDbs": Array [],
    "pass": undefined,
    "port": 27017,
    "replica": false,
    "user": undefined,
  },
  "repositories": Map {},
  "schemas": Map {
    "hero" => [Function],
  },
}
`;

exports[`with config uri 2`] = `Array []`;

exports[`with config uri 3`] = `"test"`;
